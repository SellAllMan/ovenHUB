local RunService = game:GetService("RunService")
local Lighting = game:GetService("Lighting")
local Workspace = game:GetService("Workspace")
local Players = game:GetService("Players")

local player = Players.LocalPlayer

local invisRunning = false
local IsInvis = false
local IsRunning = false
local Character, InvisibleCharacter
local invisFix, invisDied

local function fixCamera()
    local cam = Workspace.CurrentCamera
    local char = player.Character
    if not char then return end

    local humanoid = char:FindFirstChildOfClass("Humanoid")
    local hrp = char:FindFirstChild("HumanoidRootPart")

    if humanoid then
        cam.CameraSubject = humanoid
    elseif hrp then
        cam.CameraSubject = hrp
    else
        cam.CameraSubject = char
    end

    cam.CameraType = Enum.CameraType.Custom
end

local function Respawn()
    IsRunning = false
    if IsInvis == true then
        pcall(function()
            player.Character = Character
            wait()
            Character.Parent = Workspace
            local hum = Character:FindFirstChildWhichIsA("Humanoid")
            if hum then hum:Destroy() end
            IsInvis = false
            if InvisibleCharacter then InvisibleCharacter.Parent = nil end
            invisRunning = false
            fixCamera()
        end)
    elseif IsInvis == false then
        pcall(function()
            player.Character = Character
            wait()
            Character.Parent = Workspace
            local hum = Character:FindFirstChildWhichIsA("Humanoid")
            if hum then hum:Destroy() end
            TurnVisible()
            fixCamera()
        end)
    end
end

function TurnVisible()
    if IsInvis == false then return end
    if invisFix then
        invisFix:Disconnect()
        invisFix = nil
    end
    if invisDied then
        invisDied:Disconnect()
        invisDied = nil
    end

    local CF_1 = player.Character and player.Character:FindFirstChild("HumanoidRootPart") and player.Character.HumanoidRootPart.CFrame or nil
    if CF_1 and Character and Character:FindFirstChild("HumanoidRootPart") then
        Character.HumanoidRootPart.CFrame = CF_1
    end
    if InvisibleCharacter then
        InvisibleCharacter:Destroy()
    end
    player.Character = Character
    Character.Parent = Workspace
    IsInvis = false
    if Character:FindFirstChild("Animate") then
        Character.Animate.Disabled = true
        Character.Animate.Disabled = false
    end
    invisRunning = false
    fixCamera()
end

function MakeInvisible()
    if invisRunning then return end
    invisRunning = true
    repeat wait(0.1) until player.Character
    Character = player.Character
    Character.Archivable = true
    IsInvis = false
    IsRunning = true
    InvisibleCharacter = Character:Clone()
    InvisibleCharacter.Parent = Lighting
    InvisibleCharacter.Name = ""

    -- ย้ายตัวจริงไปตำแหน่งเดิมแต่ Y + 1,000,000
    if not Character.PrimaryPart then
        Character.PrimaryPart = Character:FindFirstChild("HumanoidRootPart") or Character:FindFirstChildWhichIsA("BasePart")
    end

    local invisPos = InvisibleCharacter.HumanoidRootPart.CFrame
    local farAwayPos = invisPos + Vector3.new(0, 1e6, 0)
    Character:SetPrimaryPartCFrame(farAwayPos)

    local Void = Workspace.FallenPartsDestroyHeight

    invisFix = RunService.Stepped:Connect(function()
        pcall(function()
            local IsInteger = tostring(Void):find("-") and true or false
            local Pos = player.Character and player.Character:FindFirstChild("HumanoidRootPart") and player.Character.HumanoidRootPart.Position
            if not Pos then return end
            local Y = Pos.Y
            if IsInteger then
                if Y <= Void then
                    Respawn()
                end
            else
                if Y >= Void then
                    Respawn()
                end
            end
        end)
    end)

    for i,v in pairs(InvisibleCharacter:GetDescendants()) do
        if v:IsA("BasePart") then
            if v.Name == "HumanoidRootPart" then
                v.Transparency = 1
            else
                v.Transparency = 0.5
            end
        end
    end

    invisDied = InvisibleCharacter:FindFirstChildOfClass("Humanoid").Died:Connect(function()
        Respawn()
        invisDied:Disconnect()
    end)

    if IsInvis then return end
    IsInvis = true

    Workspace.CurrentCamera.CameraType = Enum.CameraType.Scriptable
    wait(0.2)
    Workspace.CurrentCamera.CameraType = Enum.CameraType.Custom

    InvisibleCharacter.Parent = Workspace
    InvisibleCharacter.HumanoidRootPart.CFrame = invisPos
    player.Character = InvisibleCharacter

    fixCamera()

    player.Character.Animate.Disabled = true
    player.Character.Animate.Disabled = false
end

-- UI Toggle ปุ่มลากได้

local PlayerGui = player:WaitForChild("PlayerGui")

local screenGui = Instance.new("ScreenGui")
screenGui.Name = "InvisibleToggleGui"
screenGui.ResetOnSpawn = false
screenGui.Parent = PlayerGui

local frame = Instance.new("Frame")
frame.Size = UDim2.new(0, 160, 0, 60)
frame.Position = UDim2.new(0.5, -80, 0.85, 0)
frame.BackgroundColor3 = Color3.fromRGB(30,30,30)
frame.BackgroundTransparency = 0.4
frame.BorderSizePixel = 0
frame.Parent = screenGui
frame.Active = true
frame.Draggable = true

local toggleButton = Instance.new("TextButton")
toggleButton.Size = UDim2.new(1, 0, 1, 0)
toggleButton.BackgroundColor3 = Color3.fromRGB(200,0,0)
toggleButton.TextColor3 = Color3.new(1,1,1)
toggleButton.Font = Enum.Font.SourceSansBold
toggleButton.TextScaled = true
toggleButton.Text = "Invisible: OFF"
toggleButton.Parent = frame

local toggleOn = false

local function updateToggleButton()
    if toggleOn then
        toggleButton.Text = "Invisible: ON"
        toggleButton.BackgroundColor3 = Color3.fromRGB(0, 180, 0)
    else
        toggleButton.Text = "Invisible: OFF"
        toggleButton.BackgroundColor3 = Color3.fromRGB(200, 0, 0)
    end
end

local function toggleInvisibility()
    toggleOn = not toggleOn
    updateToggleButton()
    if toggleOn then
        MakeInvisible()
    else
        TurnVisible()
    end
end

toggleButton.MouseButton1Click:Connect(toggleInvisibility)

updateToggleButton()
