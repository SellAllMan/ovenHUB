local RunService = game:GetService("RunService")
local Lighting = game:GetService("Lighting")
local Workspace = game:GetService("Workspace")
local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local StarterGui = game:GetService("StarterGui")

local player = Players.LocalPlayer

local invisRunning = false
local IsInvis = false
local IsRunning = false
local Character, InvisibleCharacter
local invisFix, invisDied, invisSyncConnection

local function fixCamera(targetCharacter)
    local cam = Workspace.CurrentCamera
    local char = targetCharacter or player.Character
    if not char then return end

    local humanoid = char:FindFirstChildOfClass("Humanoid")
    local hrp = char:FindFirstChild("HumanoidRootPart")

    if humanoid then
        cam.CameraSubject = humanoid
    elseif hrp then
        cam.CameraSubject = hrp
    else
        cam.CameraSubject = char
    end

    cam.CameraType = Enum.CameraType.Custom
end

local function Respawn()
    IsRunning = false
    if IsInvis == true then
        pcall(function()
            if Character then
                player.Character = Character
                wait()
                Character.Parent = Workspace
                local hum = Character:FindFirstChildWhichIsA("Humanoid")
                if hum then hum:Destroy() end
                IsInvis = false
                if InvisibleCharacter then InvisibleCharacter:Destroy() end
                invisRunning = false
                fixCamera(Character)
            end
        end)
    elseif IsInvis == false then
        pcall(function()
            if Character then
                player.Character = Character
                wait()
                Character.Parent = Workspace
                local hum = Character:FindFirstChildWhichIsA("Humanoid")
                if hum then hum:Destroy() end
                TurnVisible()
                fixCamera(Character)
            end
        end)
    end
end

function TurnVisible()
    if IsInvis == false then return end
    if invisFix then
        invisFix:Disconnect()
        invisFix = nil
    end
    if invisDied then
        invisDied:Disconnect()
        invisDied = nil
    end
    if invisSyncConnection then
        invisSyncConnection:Disconnect()
        invisSyncConnection = nil
    end

    if InvisibleCharacter and InvisibleCharacter:FindFirstChild("HumanoidRootPart") and Character and Character:FindFirstChild("HumanoidRootPart") then
        local targetCFrame = InvisibleCharacter.HumanoidRootPart.CFrame + Vector3.new(0, 2, 0)
        local hrp = Character.HumanoidRootPart
        hrp.Anchored = true

        local tweenInfo = TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
        local tween = TweenService:Create(hrp, tweenInfo, {CFrame = targetCFrame})
        tween:Play()
        tween.Completed:Wait()

        hrp.Anchored = false
        hrp.Velocity = Vector3.new(0,0,0)
        hrp.RotVelocity = Vector3.new(0,0,0)
    end

    if InvisibleCharacter then
        InvisibleCharacter:Destroy()
        InvisibleCharacter = nil
    end

    player.Character = Character
    Character.Parent = Workspace
    IsInvis = false
    if Character:FindFirstChild("Animate") then
        Character.Animate.Disabled = true
        Character.Animate.Disabled = false
    end
    invisRunning = false
    fixCamera(Character)

    -- รีเฟรช Chat GUI
    pcall(function()
        StarterGui:SetCoreGuiEnabled(Enum.CoreGuiType.Chat, false)
        wait(0.1)
        StarterGui:SetCoreGuiEnabled(Enum.CoreGuiType.Chat, true)
    end)
end

function MakeInvisible()
    if invisRunning then return end
    invisRunning = true
    repeat wait(0.1) until player.Character
    Character = player.Character
    Character.Archivable = true
    IsInvis = false
    IsRunning = true
    InvisibleCharacter = Character:Clone()
    InvisibleCharacter.Parent = Workspace
    InvisibleCharacter.Name = "InvisibleClone"

    for _, part in pairs(InvisibleCharacter:GetDescendants()) do
        if part:IsA("BasePart") then
            if part.Name == "HumanoidRootPart" then
                part.Transparency = 1
            else
                part.Transparency = 0.5
            end
            part.CanCollide = false
        end
    end

    local invisPos = Character.HumanoidRootPart.CFrame
    local farAwayPos = invisPos + Vector3.new(0, 1e6 + 2, 0)
    Character:SetPrimaryPartCFrame(farAwayPos)

    invisFix = RunService.Stepped:Connect(function()
        pcall(function()
            local Void = Workspace.FallenPartsDestroyHeight
            local IsInteger = tostring(Void):find("-") and true or false
            local Pos = Character.HumanoidRootPart.Position
            local Y = Pos.Y
            if IsInteger then
                if Y <= Void then Respawn() end
            else
                if Y >= Void then Respawn() end
            end
        end)
    end)

    invisDied = InvisibleCharacter:FindFirstChildOfClass("Humanoid").Died:Connect(function()
        Respawn()
        invisDied:Disconnect()
    end)

    -- sync clone ทุก frame ให้ตำแหน่งตามตัวจริง
    invisSyncConnection = RunService.RenderStepped:Connect(function()
        if not InvisibleCharacter or not Character then return end
        for _, v in pairs(InvisibleCharacter:GetDescendants()) do
            if v:IsA("BasePart") then
                local originalPart = Character:FindFirstChild(v.Name)
                if originalPart and originalPart:IsA("BasePart") then
                    v.CFrame = originalPart.CFrame
                    v.Velocity = originalPart.Velocity
                    v.RotVelocity = originalPart.RotVelocity
                end
            end
        end
    end)

    IsInvis = true
    invisRunning = false
    fixCamera(InvisibleCharacter)

    -- รีเฟรช Chat GUI
    pcall(function()
        StarterGui:SetCoreGuiEnabled(Enum.CoreGuiType.Chat, false)
        wait(0.1)
        StarterGui:SetCoreGuiEnabled(Enum.CoreGuiType.Chat, true)
    end)
end

-- UI Toggle draggable

local PlayerGui = player:WaitForChild("PlayerGui")

local screenGui = Instance.new("ScreenGui")
screenGui.Name = "InvisibleToggleGui"
screenGui.ResetOnSpawn = false
screenGui.Parent = PlayerGui

local frame = Instance.new("Frame")
frame.Size = UDim2.new(0, 160, 0, 60)
frame.Position = UDim2.new(0.5, -80, 0.85, 0)
frame.BackgroundColor3 = Color3.fromRGB(30,30,30)
frame.BackgroundTransparency = 0.4
frame.BorderSizePixel = 0
frame.Parent = screenGui
frame.Active = true
frame.Draggable = true

local toggleButton = Instance.new("TextButton")
toggleButton.Size = UDim2.new(1, 0, 1, 0)
toggleButton.BackgroundColor3 = Color3.fromRGB(200,0,0)
toggleButton.TextColor3 = Color3.new(1,1,1)
toggleButton.Font = Enum.Font.SourceSansBold
toggleButton.TextScaled = true
toggleButton.Text = "Invisible: OFF"
toggleButton.Parent = frame

local toggleOn = false

local function updateToggleButton()
    if toggleOn then
        toggleButton.Text = "Invisible: ON"
        toggleButton.BackgroundColor3 = Color3.fromRGB(0, 180, 0)
    else
        toggleButton.Text = "Invisible: OFF"
        toggleButton.BackgroundColor3 = Color3.fromRGB(200, 0, 0)
    end
end

local function toggleInvisibility()
    toggleOn = not toggleOn
    updateToggleButton()
    if toggleOn then
        MakeInvisible()
    else
        TurnVisible()
    end
end

toggleButton.MouseButton1Click:Connect(toggleInvisibility)

updateToggleButton()
